<div class="alert_tip">
  1.Boolean类型在比较之前总是先转化成数字；false -> 0; true -> 1 <br>
  2.undefined == null <br>
  3.undefined\null 与其它类型的值比较皆为false
</div>
<table class="table_normal">
  <tr>
    <th>==</th>
    <th>String</th>
    <th>Number</th>
    <th>Object</th>
  </tr>
  <tr>
    <th>String</th>
    <td>~</td>
    <td>将String转换成Number类型，用Number()强制转换</td>
    <td>将Object转换成String类型，用toString()转换</td>
  </tr>
  <tr>
    <th>Number</th>
    <td>~</td>
    <td>~</td>
    <td>
      将Object转换成Number类型 <br>
      例如：var obj_a = new Number(1); <br>
      var num_a = obj_a.valueOf(); <br>
      num_a即为转化后的值
    </td>
  </tr>
  <tr>
    <th>Object</th>
    <td></td>
    <td></td>
    <td>如果两个变量引用同一个对象的值，那么他们相等（不论==或是===）。</td>
  </tr>
</table>